name: Release Pipeline

on:
  pull_request:
    branches:
      - main
    types: [closed]

concurrency:
  group: deploy-shared-prod

env:
  REGISTRY_NAME: acrctshared001
  NAMESPACE: tools-prod
  HELM_TEMPLATE_DIR: ./prod/services/unleash-edge/chatbot-ui
  APP_NAME: chatbot-ui
  SHARED_KEY_VAULT_NAME: kv-ct-shared-devops-001
  SHARED_KEY_VAULT_SECRETS: GITHUB-PAT acrctshared-password

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure get Shared KeyVault secret
        run: |
          for secret in $(echo "$SHARED_KEY_VAULT_SECRETS"); do
            VALUE=$(az keyvault secret show --vault-name ${{ env.SHARED_KEY_VAULT_NAME }} --name $secret | jq -r '.value')
            echo "::add-mask::$VALUE"
            echo "$secret=$VALUE" >> $GITHUB_ENV
          done

      - name: checkout code
        uses: actions/checkout@v4

      - name: checkout shared code
        uses: actions/checkout@v4
        with:
          repository: "Knauf-Group/Customer-Tech-Shared"
          token: "${{ env.GITHUB-PAT }}"
          path: "./_shared"

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: generate build version
        run: |
          chmod +x "${{ github.workspace }}/_shared/scripts/version.py"
          echo "IMAGE_TAG=$(python ${{ github.workspace }}/_shared/scripts/version.py "${{ github.event.pull_request.title }}" ${{ github.head_ref }})" >> $GITHUB_ENV

      - name: write version file
        run: |
          echo "${{ env.IMAGE_TAG }}" >> build.txt

      - name: publish image tag to build version file
        uses: actions/upload-artifact@v3
        with:
          name: version
          path: build.txt

      - name: get last commit git sha
        run: |
          GITHUB_SHA=$(git rev-parse main)
          echo "::set-output name=GITHUB_SHA::$GITHUB_SHA"
        id: github-sha

      - name: create git tag
        uses: actions/github-script@v6
        with:
          github-token: ${{ env.GITHUB-PAT }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ env.IMAGE_TAG }}",
              sha: "${{ steps.github-sha.outputs.GITHUB_SHA }}"
            })

      - name: login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ env.REGISTRY_NAME }}
          password: ${{ env.acrctshared-password }}

      - name: build and push image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.NAMESPACE}}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}

  deploy-prod:
    runs-on: [ubuntu-20.04]
    needs: build
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure get Shared KeyVault secret
        run: |
          for secret in $(echo "$SHARED_KEY_VAULT_SECRETS"); do
            VALUE=$(az keyvault secret show --vault-name ${{ env.SHARED_KEY_VAULT_NAME }} --name $secret | jq -r '.value')
            echo "::add-mask::$VALUE"
            echo "$secret=$VALUE" >> $GITHUB_ENV
          done

      - name: checkout deployment config repo
        uses: actions/checkout@v4
        with:
          repository: "Knauf-Group/ct-shared-deployment-configs.git"
          token: ${{ env.GITHUB-PAT }}
          ref: "main"
          fetch-depth: 0

      - name: get build version
        uses: actions/download-artifact@v3
        with:
          name: version

      - name: generate build version
        run: |
          echo "IMAGE_TAG=$(cat build.txt)" >> $GITHUB_ENV

      - name: set tag version
        run: |
          mv values.yaml valuesOld.yaml
          sed -e 's/tag: .*$/tag: "${{ env.IMAGE_TAG }}"/g' valuesOld.yaml > values.yaml
          cat values.yaml
        working-directory: ${{ env.HELM_TEMPLATE_DIR }}

      - name: commit files
        continue-on-error: true
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add values.yaml
          git commit -m "Update chatbot-ui to ${{ env.IMAGE_TAG }}"
        working-directory: ${{ env.HELM_TEMPLATE_DIR }}

      - name: Push changes
        continue-on-error: true
        uses: ad-m/github-push-action@master
        with:
          repository: "Knauf-Group/ct-shared-deployment-configs"
          github_token: ${{ env.GITHUB-PAT }}
          branch: "main"
